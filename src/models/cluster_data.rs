/*
 * Pulsar Admin REST API
 *
 * This provides the REST API for admin operations
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ClusterData : The configuration data for a cluster


#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterData {
    /// The HTTP rest service URL (for admin operations)
    #[serde(rename = "serviceUrl", skip_serializing_if = "Option::is_none")]
    pub service_url: Option<String>,
    /// The HTTPS rest service URL (for admin operations)
    #[serde(rename = "serviceUrlTls", skip_serializing_if = "Option::is_none")]
    pub service_url_tls: Option<String>,
    /// The broker service url (for produce and consume operations)
    #[serde(rename = "brokerServiceUrl", skip_serializing_if = "Option::is_none")]
    pub broker_service_url: Option<String>,
    /// The secured broker service url (for produce and consume operations)
    #[serde(rename = "brokerServiceUrlTls", skip_serializing_if = "Option::is_none")]
    pub broker_service_url_tls: Option<String>,
    /// A set of peer cluster names
    #[serde(rename = "peerClusterNames", skip_serializing_if = "Option::is_none")]
    pub peer_cluster_names: Option<Vec<String>>,
}

impl ClusterData {
    /// The configuration data for a cluster
    pub fn new() -> ClusterData {
        ClusterData {
            service_url: None,
            service_url_tls: None,
            broker_service_url: None,
            broker_service_url_tls: None,
            peer_cluster_names: None,
        }
    }
}


